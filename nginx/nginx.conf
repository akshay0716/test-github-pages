events {
  worker_connections 1024; ## Default: 1024
}

http {

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;
  keepalive_timeout 65;
  default_type application/octet-stream;

  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
  }

 
    upstream dominatelanding {
      server dominate.ai:3000 weight=50 fail_timeout=30s;
    }


  server {

    listen 443 ssl;
    ssl_certificate /etc/ssl/fullchain.pem;
    ssl_certificate_key /etc/ssl/privkey.pem;
    sendfile on;

    default_type application/octet-stream;

    gzip on;
    gzip_http_version 1.1;
    gzip_disable "MSIE [1-6]\.";
    gzip_min_length 1000;
    gzip_vary on;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_comp_level 9;

    # set client body size to 2M #
    client_max_body_size 20M;

    root /usr/share/nginx/html;
    index index.html index.htm;
    include /etc/nginx/mime.types;

    server_name dominate.ai www.dominate.ai;

    location / {
      proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_pass http://dominatelanding;
    }
  }
}


#sudo docker pull nginx
#sudo docker run --name docker-nginx -p 80:80 -v ~/dominate/code/dominate-backend/nginx/nginx.conf:/etc/nginx/nginx.conf nginx
#sudo docker run --name docker-nginx -p 80:80 -v ~/Documents/freelancing/dominate-backend/config/nginx.conf:/etc/nginx/nginx.conf nginx